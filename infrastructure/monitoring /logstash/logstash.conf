# ====================== ThiQaX Logstash Configuration ======================
#
# NOTE: This configuration is optimized for the ThiQaX platform logging infrastructure.
#       Do not modify without consulting the infrastructure team.
#
# ------------ Node Settings --------------

# The node name identifies this instance of Logstash for monitoring/management
node.name: thiqax-logstash

# A list of pipeline ids. If defined, this setting disables config.reload.automatic
# by default for the set of named pipelines and the main pipeline.
# Format: pipelines.id: ["main", "secondary"]
pipelines.id: ["main", "thiqax-api", "thiqax-nginx", "system-logs"]

# ------------ Pipeline Settings --------------
# Path to pipeline configuration files
path.config: /etc/logstash/conf.d

# Set if and when Logstash should check the configuration for changes
# Options are:
# "enabled: true": Enable automatic config reloading (default)
# "enabled: false": Disable automatic config reloading
# "interval: 3s": How often to check for changes (default: 3s)
config.reload.automatic: true
config.reload.interval: 10s

# ------------ Module Settings ---------------
# Define modules here.  The default pipeline, if enabled, is already defined.
# Format: modules: name=module_name setting=value
# Example: modules: name=module_name1 var.input.tcp.port=value setting2=value
#          modules: name=module_name2 var.input.tcp.port=value
modules:
  - name: netflow
    var.input.udp.port: 5606

# ------------ API Settings ---------------
# Define settings for the Logstash API endpoint
api.http.host: "0.0.0.0"
api.http.port: 9600

# ------------ Metrics Settings --------------
# Publish metrics to Elasticsearch
xpack.monitoring.enabled: true
xpack.monitoring.elasticsearch.hosts: ["http://elasticsearch:9200"]
xpack.monitoring.elasticsearch.username: "${LS_MONITORING_ES_USERNAME:logstash_system}"
xpack.monitoring.elasticsearch.password: "${LS_MONITORING_ES_PASSWORD:changeme}"
xpack.monitoring.collection.interval: 15s
xpack.monitoring.collection.pipeline.details.enabled: true

# ------------ Pipeline Workers --------------
# Should Logstash stop for pipeline reload failures
pipeline.ordered: auto

# How many pipeline workers (events in parallel) should be used (default: number of cores)
# This value affects processing speed and CPU usage
pipeline.workers: ${LS_PIPELINE_WORKERS:4}

# How many events to retrieve from inputs before sending to filters/outputs
pipeline.batch.size: ${LS_BATCH_SIZE:2000}

# How long to wait before dispatching an undersized batch to filters/outputs
pipeline.batch.delay: ${LS_BATCH_DELAY:50}

# ------------ Memory Settings --------------
# For Java heap sizing:
# Use 1g for every 4 CPU cores up to a max of 8g
# Smaller hardware can specify in MB: 768m
# This should be 1/4 of available system RAM
# Example: -Xms1g -Xmx1g
jvm.options: ["-Xms${LS_HEAP_SIZE:1g}", "-Xmx${LS_HEAP_SIZE:1g}"]

# ------------ Persistence Settings --------------
# When true, enables queue persistence
queue.type: persisted

# Path for persistent queues
path.queue: /var/lib/logstash/queue

# Size of queue - adjust based on event volume
queue.max_bytes: ${LS_QUEUE_MAX_BYTES:1gb}
queue.checkpoint.writes: ${LS_QUEUE_CHECKPOINT_WRITES:1024}

# ------------ Dead Letter Queue Settings --------------
# The dead letter queue lets you save events that can't be processed
dead_letter_queue.enable: true
path.dead_letter_queue: /var/lib/logstash/dead_letter_queue

# ------------ Data Path Settings --------------
# Directory where logstash state is persisted
path.data: /var/lib/logstash

# ------------ Logging Settings --------------
# Log level - options: fatal, error, warn, info, debug, trace
log.level: ${LS_LOG_LEVEL:info}

# JSON format logs for easier parsing
log.format: ${LS_LOG_FORMAT:json}

# Path for logs
path.logs: /var/log/logstash

# ------------ ThiQaX-specific Settings --------------
# Variables for ThiQaX platform
node.environment: ${LS_ENVIRONMENT:staging}
node.service: thiqax-logstash

# Slow log threshold in ms (warn when events take longer than this)
slowlog.threshold.warn: 2000
slowlog.threshold.info: 1000
slowlog.threshold.debug: 500
slowlog.threshold.trace: 100

# Filter workers (defaults to number of cores)
pipeline.filter_workers: ${LS_FILTER_WORKERS:4}

# Set to true to protect against memory issues when testing new pipelines
config.test_and_exit: false
config.reload.debug: ${LS_RELOAD_DEBUG:false}

# ------------ Performance Settings --------------
# CPU usage settings
pipeline.plugin_classloaders: false

# Set to true to use faster Jackson implementation for JSON parsing
pipeline.ecs_compatibility: disabled
