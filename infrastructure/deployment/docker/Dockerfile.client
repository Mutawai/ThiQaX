# Dockerfile.client
# Build Stage
FROM node:20-alpine as build

WORKDIR /app

# Copy package files first for better cache utilization
COPY package*.json ./
RUN npm ci

# Copy source code
COPY . .

# Build application with environment variables if needed
ARG REACT_APP_API_URL
ARG REACT_APP_ENVIRONMENT
RUN npm run build

# Production Stage
FROM nginx:alpine

# Create non-root user for better security
RUN addgroup -g 1001 -S nginx-app && \
    adduser -S appuser -u 1001 -G nginx-app

# Copy build files from build stage
COPY --from=build /app/build /usr/share/nginx/html

# Copy custom nginx configuration
COPY infrastructure/deployment/docker/nginx/default.conf /etc/nginx/conf.d/default.conf

# Add cache headers and security headers in nginx conf
# (Make sure these are in your nginx config)

# Fix permissions
RUN chown -R appuser:nginx-app /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Expose port
EXPOSE 80

# Add health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
