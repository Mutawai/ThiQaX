version: '3.8'

services:
  api:
    build:
      context: ../../..  # Path to project root
      dockerfile: infrastructure/deployment/docker/Dockerfile.api
    image: thiqax-api:${VERSION:-latest}
    container_name: thiqax-api
    restart: unless-stopped
    ports:
      - "${API_PORT:-5000}:5000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=5000
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=redis://redis:6379
    volumes:
      - api_logs:/app/logs
      - api_uploads:/app/uploads
      - api_security_reports:/app/security-reports
    depends_on:
      - mongodb
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - thiqax-network

  client:
    build:
      context: ../../..  # Path to project root
      dockerfile: infrastructure/deployment/docker/Dockerfile.client
      args:
        - REACT_APP_API_URL=${API_URL:-http://localhost:5000}
        - REACT_APP_ENVIRONMENT=${NODE_ENV:-production}
    image: thiqax-client:${VERSION:-latest}
    container_name: thiqax-client
    restart: unless-stopped
    ports:
      - "${CLIENT_PORT:-80}:80"
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - thiqax-network

  mongodb:
    image: mongo:5
    container_name: thiqax-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=thiqax
    volumes:
      - mongodb_data:/data/db
      - ../../config/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "${MONGO_PORT:-27017}:27017"
    networks:
      - thiqax-network

  redis:
    image: redis:alpine
    container_name: thiqax-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - thiqax-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: thiqax-elasticsearch
    environment:
      - node.name=thiqax-es01
      - cluster.name=thiqax-es-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "${ES_PORT:-9200}:9200"
    networks:
      - thiqax-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: thiqax-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "${KIBANA_PORT:-5601}:5601"
    depends_on:
      - elasticsearch
    networks:
      - thiqax-network

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.0
    container_name: thiqax-filebeat
    volumes:
      - ../../monitoring/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - api_logs:/var/log/thiqax-api:ro
    depends_on:
      - elasticsearch
      - kibana
    networks:
      - thiqax-network

  prometheus:
    image: prom/prometheus:latest
    container_name: thiqax-prometheus
    volumes:
      - ../../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    networks:
      - thiqax-network

  grafana:
    image: grafana/grafana:latest
    container_name: thiqax-grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ../../monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ../../monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    depends_on:
      - prometheus
    networks:
      - thiqax-network

networks:
  thiqax-network:
    driver: bridge

volumes:
  api_logs:
  api_uploads:
  api_security_reports:
  mongodb_data:
  redis_data:
  elasticsearch_data:
  prometheus_data:
  grafana_data:
