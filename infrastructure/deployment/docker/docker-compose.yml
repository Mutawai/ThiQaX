version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: thiqax-api:${VERSION:-latest}
    container_name: thiqax-api
    restart: unless-stopped
    ports:
      - "${PORT:-5000}:5000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=5000
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./security-reports:/app/security-reports
    depends_on:
      - mongodb
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - thiqax-network

  nginx:
    image: nginx:alpine
    container_name: thiqax-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./frontend:/usr/share/nginx/html:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api
    networks:
      - thiqax-network

  mongodb:
    image: mongo:5
    container_name: thiqax-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=thiqax
    volumes:
      - mongodb-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - thiqax-network

  redis:
    image: redis:alpine
    container_name: thiqax-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - thiqax-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: thiqax-elasticsearch
    environment:
      - node.name=thiqax-es01
      - cluster.name=thiqax-es-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - thiqax-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.0
    container_name: thiqax-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - thiqax-network

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.17.0
    container_name: thiqax-filebeat
    volumes:
      - ./monitoring/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/var/log/thiqax-api:ro
      - ./logs/nginx:/var/log/nginx:ro
    depends_on:
      - elasticsearch
      - kibana
    networks:
      - thiqax-network

  prometheus:
    image: prom/prometheus:latest
    container_name: thiqax-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - thiqax-network

  grafana:
    image: grafana/grafana:latest
    container_name: thiqax-grafana
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - thiqax-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: thiqax-node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - thiqax-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: thiqax-cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    ports:
      - "8080:8080"
    networks:
      - thiqax-network

networks:
  thiqax-network:
    driver: bridge

volumes:
  mongodb-data:
  redis-data:
  elasticsearch-data:
  prometheus-data:
  grafana-data:
