# docker-compose.yml
version: '3.8'

services:
  mongo:
    image: mongo:5.0
    container_name: thiqax-mongo
    restart: always
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    ports:
      - "27017:27017"
    networks:
      - thiqax-network

  api:
    build:
      context: ./mutawai-api
      dockerfile: ../deployment/docker/Dockerfile.api
    container_name: thiqax-api
    restart: always
    depends_on:
      - mongo
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@mongo:27017/thiqax?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRY=${JWT_EXPIRY}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - REFRESH_TOKEN_EXPIRY=${REFRESH_TOKEN_EXPIRY}
      - EMAIL_FROM=${EMAIL_FROM}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
    ports:
      - "5000:5000"
    networks:
      - thiqax-network

  client:
    build:
      context: ./mutawai-client
      dockerfile: ../deployment/docker/Dockerfile.client
    container_name: thiqax-client
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"
    networks:
      - thiqax-network

  nginx:
    image: nginx:alpine
    container_name: thiqax-nginx
    restart: always
    ports:
      - "443:443"
    volumes:
      - ./deployment/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./deployment/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api
      - client
    networks:
      - thiqax-network

volumes:
  mongo-data:

networks:
  thiqax-network:
    driver: bridge
