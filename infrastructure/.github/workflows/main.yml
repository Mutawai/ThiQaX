name: ThiQaX CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  validate:
    name: Validate Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Security audit
        run: npm run test:security

  test:
    name: Run Tests
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm run test:unit
      - name: Run integration tests
        run: npm run test:integration
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage
          path: coverage/

  security-scan:
    name: Security Scan
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run vulnerability scan
        run: |
          chmod +x ./scripts/security/vulnerability-scan.sh
          ./scripts/security/vulnerability-scan.sh --environment ${{ github.event.inputs.environment || 'staging' }}
      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: security-reports/

  build:
    name: Build Application
    needs: [test, security-scan]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Create deployment package
        run: |
          mkdir -p deployment
          cp -r src/ package.json package-lock.json .env.example deployment/
          cd deployment && zip -r ../thiqax-deployment.zip .
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: deployment-package
          path: thiqax-deployment.zip

  deploy-staging:
    name: Deploy to Staging
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging'
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v3
      - name: Download deployment package
        uses: actions/download-artifact@v3
        with:
          name: deployment-package
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Deploy to staging
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          chmod +x ./scripts/ci/deploy-staging.sh
          ./scripts/ci/deploy-staging.sh
      - name: Run migrations
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          ssh $DEPLOY_USER@$DEPLOY_HOST "cd $DEPLOY_PATH && NODE_ENV=staging npm run migrate:up"
      - name: Verify deployment
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          API_URL: ${{ secrets.STAGING_API_URL }}
        run: |
          chmod +x ./scripts/ci/verify-deployment.sh
          ./scripts/ci/verify-deployment.sh
      - name: Send notification
        if: always()
        run: |
          chmod +x ./scripts/ci/notify-deployment.sh
          ./scripts/ci/notify-deployment.sh "staging" "${{ job.status }}"

  deploy-production:
    name: Deploy to Production
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Download deployment package
        uses: actions/download-artifact@v3
        with:
          name: deployment-package
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Deploy to production
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          chmod +x ./scripts/ci/deploy-production.sh
          ./scripts/ci/deploy-production.sh
      - name: Run migrations
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          ssh $DEPLOY_USER@$DEPLOY_HOST "cd $DEPLOY_PATH && NODE_ENV=production npm run migrate:up"
      - name: Verify deployment
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          API_URL: ${{ secrets.PRODUCTION_API_URL }}
        run: |
          chmod +x ./scripts/ci/verify-deployment.sh
          ./scripts/ci/verify-deployment.sh
      - name: Send notification
        if: always()
        run: |
          chmod +x ./scripts/ci/notify-deployment.sh
          ./scripts/ci/notify-deployment.sh "production" "${{ job.status }}"
